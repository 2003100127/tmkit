## Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
#[build-system]
#requires = ["poetry_core>=1.0.0"]
#build-backend = "poetry.core.masonry.api"
#
#[tool.poetry]
#name = "tmkit"
#version = "0.0.2"
#description = "TMKit is a scalable Python programming interface holding a bundle of function modules to allow a variety of transmembrane protein studies."
#readme = "README.md"
#authors = ["Jianfeng Sun <jianfeng.sun@ndorms.ox.ac.uk>"]
#license = "GNU GPL v3.0"
#repository = "https://github.com/2003100127/tmkit"
#homepage = "https://github.com/2003100127/tmkit"
#
## Keywords description https://python-poetry.org/docs/pyproject/#keywords
#keywords = []  #! Update me
#
## Pypi classifiers: https://pypi.org/classifiers/
#classifiers = [  #! Update me
#  "Development Status :: 4 - Beta",
#  "Intended Audience :: Developers",
#  "Operating System :: OS Independent",
#  "Topic :: Software Development :: Libraries :: Python Modules",
#  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
#  "Programming Language :: Python :: 3.10",
#  "Programming Language :: Python :: 3.11",
#]
#
#[tool.poetry.scripts]
## Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
#"tmkit" = "tmkit.__main__:app"
#
#[tool.poetry.dependencies]
#python = ">=3.10,<3.11"
#
#typer = {extras = ["all"], version = "^0.9.0"}
#rich = ">=13.3.5,<14.0.0"
#pandas = "^2.0.3"
#biopython = "^1.81"
#scikit-learn = "^1.3.0"
#pypdb = "^2.2"
#numpy = "^1.25.0"
#pre-commit = "^3.3.3"
#biopandas = "^0.4.1"
#
#[tool.poetry.group.dev.dependencies]
#bandit = "^1.7.5"
#black = {version = "^23.3.0", allow-prereleases = true}
#isort = {extras = ["colors"], version = "^5.12.0"}
#pydocstyle = "^6.3.0"
#pylint = "^2.17.4"
#pytest = "^7.4.0"
#pyupgrade = "^3.8.0"
#safety = "^2.3.5"
#coverage = "^7.2.7"
#coverage-badge = "^1.1.0"
#pytest-html = "^3.2.0"
#pytest-cov = "^4.1.0"
#mypy = "^1.4.1"
#pydoclint = "^0.0.14"
#pynguin = "^0.33.0"
#monkeytype = "^23.3.0"
#ipykernel = "^6.24.0"
#jupyter = "^1.0.0"
#pre-commit = "^3.3.3"
#
#[tool.black]
## https://github.com/psf/black
#target-version = ["py310"]
#line-length = 88
#color = true
#
#exclude = '''
#/(
#    \.git
#    | \.hg
#    | \.mypy_cache
#    | \.tox
#    | \.venv
#    | _build
#    | buck-out
#    | build
#    | dist
#    | env
#    | venv
#)/
#'''
#
#[tool.isort]
## https://github.com/timothycrosley/isort/
#py_version = 310
#line_length = 88
#
#known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
#sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
#include_trailing_comma = true
#profile = "black"
#multi_line_output = 3
#indent = 4
#color_output = true
#
#[tool.mypy]
## https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
#python_version = "3.10"
#pretty = true
#show_traceback = true
#color_output = true
#
#allow_redefinition = false
#check_untyped_defs = true
#disallow_any_generics = true
#disallow_incomplete_defs = true
#ignore_missing_imports = true
#implicit_reexport = false
#no_implicit_optional = true
#show_column_numbers = true
#show_error_codes = true
#show_error_context = true
#strict_equality = true
#strict_optional = true
#warn_no_return = true
#warn_redundant_casts = true
#warn_return_any = true
#warn_unreachable = true
#warn_unused_configs = true
#warn_unused_ignores = true
#
#
#[tool.pytest.ini_options]
## https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
## Directories that are not visited by pytest collector:
#norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
#doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
#
## Extra options:
#addopts = [
#  "--strict-markers",
#  "--tb=short",
#  "--doctest-modules",
#  "--doctest-continue-on-failure",
#]
#
#[tool.coverage.run]
#source = ["tests"]
#
#[coverage.paths]
#source = "tmkit"
#
#[coverage.run]
#branch = true
#
#[coverage.report]
#fail_under = 50
#show_missing = true
#
#[tool.pydoclint]
#style = 'numpy'
#exclude = '\.git|\.tox|tests/data|some_script\.py'
#require-return-section-when-returning-none = true
# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "tmkit"
version = "0.0.5"
description = "TMKit is a scalable Python programming interface holding a bundle of function modules to allow a variety of transmembrane protein studies."
readme = "README.md"
authors = ["Jianfeng Sun <jianfeng.sun@ndorms.ox.ac.uk>"]
license = "GNU GPL v3.0"
repository = "https://github.com/2003100127/tmkit"
homepage = "https://github.com/2003100127/tmkit"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"tmkit" = "tmkit.__main__:app"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"

typer = {extras = ["all"], version = "^0.9.0"}
rich = ">=13.3.5,<14.0.0"
pandas = "^2.0.3"
biopython = "^1.81"
scikit-learn = "^1.3.0"
pypdb = "^2.2"
numpy = "^1.25.1"
pre-commit = "^3.3.3"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
black = {version = "^23.7.0", allow-prereleases = true}
isort = {extras = ["colors"], version = "^5.12.0"}
pydocstyle = "^6.3.0"
pylint = "^2.17.4"
pytest = "^7.4.0"
pyupgrade = "^3.9.0"
safety = "^2.3.5"
coverage = "^7.2.7"
coverage-badge = "^1.1.0"
pytest-html = "^3.2.0"
pytest-cov = "^4.1.0"
mypy = "^1.4.1"
pydoclint = "^0.0.15"
pynguin = "^0.33.0"
monkeytype = "^23.3.0"
ipykernel = "^6.24.0"
jupyter = "^1.0.0"
pre-commit = "^3.3.3"
bumpversion = "^0.6.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 310
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "tmkit"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true

[tool.pydoclint]
style = 'numpy'
exclude = '\.git|\.tox|tests/data|some_script\.py'
require-return-section-when-returning-none = true
